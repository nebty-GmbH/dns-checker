# Generated by Django 5.2.4 on 2025-08-04 08:59

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Domain name to monitor (e.g., google.com)', max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this domain is currently being monitored')),
                ('last_known_ips', models.TextField(blank=True, help_text='Comma-separated list of last known IP addresses', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last time this domain was checked')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this domain was added to monitoring')),
            ],
            options={
                'verbose_name': 'Domain',
                'verbose_name_plural': 'Domains',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RecordLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ips', models.TextField(help_text='Comma-separated list of IP addresses found during this check')),
                ('is_change', models.BooleanField(default=False, help_text='Whether the IPs changed from the previous check')),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='When this check was performed')),
                ('error_message', models.TextField(blank=True, help_text='Error message if DNS lookup failed', null=True)),
                ('domain', models.ForeignKey(help_text='Domain that was checked', on_delete=django.db.models.deletion.CASCADE, related_name='record_logs', to='monitor.domain')),
            ],
            options={
                'verbose_name': 'Record Log',
                'verbose_name_plural': 'Record Logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['domain', '-timestamp'], name='monitor_rec_domain__9a3fca_idx'), models.Index(fields=['is_change', '-timestamp'], name='monitor_rec_is_chan_85b559_idx')],
            },
        ),
    ]
